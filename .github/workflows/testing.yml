name: Testing

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'  # Every day at 00:00 UTC

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.11, 3.12]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Conda with Mamba
        uses: conda-incubator/setup-miniconda@v2
        with:
          use-mamba: true
          auto-activate-base: false
          miniforge-variant: Miniforge3

      - name: Create environment
        run: |
          mamba env create -f .github/workflows/testing_conda_envs/python${{ matrix.python-version }}.yml

      - name: Run tests (Unix)
        if: runner.os != 'Windows'
        run: |
          export PYTHONPATH=$(pwd)/src
          mamba run -n plaid_python${{ matrix.python-version }} pytest tests
          cd examples
          bash run_examples.sh

      - name: Run tests (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $env:PYTHONPATH = "$(Get-Location)\src"
          mamba run -n plaid_python${{ matrix.python-version }} pytest tests
          Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process
          cd examples
          .\run_examples.ps1

    #   - name: Set up Miniconda
    #     uses: conda-incubator/setup-miniconda@v2
    #     with:
    #       miniforge-variant: Miniforge3
    #       miniforge-version: latest
    #       use-mamba: true
    #       auto-activate-base: false
    #       auto-update-conda: true
    #       activate-environment: plaid_python${{ matrix.python-version }}
    #       environment-file: .github/workflows/testing_conda_envs/python${{ matrix.python-version }}.yml